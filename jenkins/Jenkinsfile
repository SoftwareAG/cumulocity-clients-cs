pipeline {
    agent {
        docker {
            image 'c8y-ubuntu-mono-devel:0.0.1'
            args '-v /var/lib/jenkins/.mono:/root/.mono'
        }
    }
	parameters {
        booleanParam(defaultValue: true, description: '', name: 'DIAGNOSTIC_FLAG')
		booleanParam(defaultValue: false, description: '', name: 'CAN_RELEASE')
    }
    environment {
        CI = 'true'
    }
    stages {
        stage('Build') {
		    
			when {
                branch 'develop'
            }
            steps {
			    
				script {
				    if ("${params.CAN_RELEASE}" == "true") {
							echo "CAN_RELEASE: ${params.CAN_RELEASE}"
							    
								sshagent (['jenkins-hg-key']) {
								sh '''#!/bin/bash
								whoami
								chmod +x ./MicroservicesSDK/build.sh
								cd MicroservicesSDK
								pwd
								./build.sh --script build-release.cake
								'''
								}
					}
					else{
						if ("${params.DIAGNOSTIC_FLAG}" == "true") {
							echo "diagnostic flag: ${params.DIAGNOSTIC_FLAG}"
							sh 'cd MicroservicesSDK && chmod +x ./build.sh && pwd && ./build.sh -target=Test -verbosity=diagnostic'
						}else
						{
							echo "diagnostic flag: ${params.DIAGNOSTIC_FLAG}"
							sh 'cd MicroservicesSDK && chmod +x ./build.sh && pwd && ./build.sh -target=Test'
						}
					}
                }
            }
        } 
		stage('Deliver for development') {
            when {
                branch 'development'
            }
            steps {
				sh 'echo DevelopmentBranch'
            }
        }
        stage('Release') {
            when {
                branch "release/*"
            }
            steps {
				script {
                    if ("${params.DIAGNOSTIC_FLAG}" == "true" && ("${params.CAN_RELEASE}" == "true")) {
					    sh 'echo Release Branch'
						echo "diagnostic flag: ${params.DIAGNOSTIC_FLAG}"
						
						echo "Release Branch"
							    
						sshagent (['jenkins-hg-key']) {
						sh '''#!/bin/bash
						whoami
						chmod +x ./MicroservicesSDK/build.sh
						cd MicroservicesSDK
						pwd
						./build.sh --script build-release.cake -verbosity=diagnostic
						'''
						}
							
                    }else if ("${params.CAN_RELEASE}" == "true")
					{
							echo "Release Branch"
							    
							sshagent (['jenkins-hg-key']) {
							sh '''#!/bin/bash
							whoami
							chmod +x ./MicroservicesSDK/build.sh
							cd MicroservicesSDK
							pwd
							./build.sh --script build-release.cake
							'''
							}
					} else {
					    sh 'echo Release Branch'
						echo "CAN_RELEASE: ${params.CAN_RELEASE}"
					}
                }
            }
        }

        stage('Feature') {
            when {
                when { branch 'feature/MTM-22641/Deploy-script' }
            }
            steps {
				script {
					    sh 'echo Feature Branch'
						echo "diagnostic flag: ${params.DIAGNOSTIC_FLAG}"
						
						echo "Release Branch"
							    
						sshagent (['jenkins-hg-key']) {
						sh '''#!/bin/bash
						whoami
                        ssh hudson@yum.cumulocity.com ls
						'''
						}
							

                }
            }
        }		
    }
	
	post { 
        always { 
            cleanWs()
        }
    }
}
